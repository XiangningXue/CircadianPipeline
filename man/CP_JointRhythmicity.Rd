% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CP_JointRhythmicity.R
\name{CP_JointRhythmicity}
\alias{CP_JointRhythmicity}
\title{Title Joint Rhythmicity of genes from two data sets}
\usage{
CP_JointRhythmicity(
  x1 = data1.rhythm,
  x2 = data2.rhythm,
  method = "AW-Fisher",
  para.list = list(param = "pvalue", range = "less", value = 0.05)
)
}
\arguments{
\item{x1}{rhythm object for data1, should be an output of CP_Rhythmicity}

\item{x2}{rhythm object for data2, should be an output of CP_Rhythmicity}

\item{method}{one of "AW-Fisher" or "cutoff"}

\item{para.list}{For method = "AW-Fisher", para.list = list(param = "p", range = "less", value = "0.05"). For method = "cutoff", an example is para.list = list(param = c("A", "pvalue"), range = c("greater", "less"), value = c(0.25, 0.05)), which means genes with A>0.25 and pvalue<0.05 are rhythmic genes}
}
\value{
A list with two components: Rhythmic.Both contains the labels of genes that are rhythmic in both regions; Rhythmic.GT.One contains the labels of genes that are rhythmic in at least one region
}
\description{
This function takes the output of CP_Rhythmicity from both data set and test for the joint rhythmicity of overlapping genes of the two data sets.
}
\examples{

#simulate two data sets
x1.time = runif(20, min = 0, max = 24)
m1 = rnorm(100, 5); A1 = rnorm(100, 3); phase1 = runif(100, min = 0, max = 2*pi); sigma = 1
noise.mat1 = matrix(rnorm(100*20, 0, sigma), ncol = 20, nrow = 100)
signal.mat1 = t(sapply(1:100, function(a){m1[a]+A1[a]*cos(2*pi/24*x1.time+phase1[a])}))

x2.time = runif(20, min = 0, max = 24)
m2 = m1; A2 = 1.5*A1; phase2 = runif(100, min = 0, max = 2*pi); sigma = 1
noise.mat2 = matrix(rnorm(100*20, 0, sigma), ncol = 20, nrow = 100)
signal.mat2 = t(sapply(1:100, function(a){m2[a]+A2[a]*cos(2*pi/24*x2.time+phase2[a])}))

x1 = list(data = noise.mat1 + signal.mat1, tod = x1.time, label = paste("gene", seq_len(100)))
x1.Rhythm = CP_Rhythmicity(x1, parallel = FALSE)
x2 = list(data = noise.mat2 + signal.mat2, tod = x2.time, label = paste("gene", seq_len(100)))
x2.Rhythm = CP_Rhythmicity(x2, parallel = FALSE)

x.joint = CP_JointRhythmicity(x1.Rhythm, x2.Rhythm, method = "AW-Fisher",
para.list = list(param = "pvalue", range = "less", value = 0.05))

}
